#include<stdio.h>
typedef struct frac
{
  int num;
  int den;
}F;
typedef struct Samp
{
  int m;
  F k[50];
}S;
int givemeGCD(int m, int n)
{
  if(m==0)
    return n;
  else
    return givemeGCD(n%m,m);
}
int givemeLCM(S s)
{
  int i, lcm = s.k[0].den;
  for(i=1;i<s.m;i++)
    lcm = ((s.k[i].den*lcm)/(givemeGCD(s.k[i].den,lcm)));
  return lcm;
}
void input_cases(int n, S b[])
{
  int i,j;
  scanf("%d",&n);
  for(i=0;i<n;i++)
  {
    scanf("%d",&b[i].m);
    for(j=0;j<b[i].m;j++)
    {
      b[i].k[j].num = 1;
      scanf("%d",&b[i].k[j].den);
    }
  }
}
F compute_sum(S C)
{
  F res;
  int G,i;
  res.num = 0;
  res.den = givemeLCM(C);
  for(i=0;i<C.m;i++)
    res.num += (C.k[i].num)*(res.den/C.k[i].den);
  G = givemeGCD(res.num,res.den);
  res.num /= G;
  res.den /= G;
  return res;
}
void print_egyptian_sum(F f, S s)
{
  int j;
  for(j=0;j<s.m-1;j++)
  {
    printf("%d/%d + ",s.k[j].num,s.k[j].den);
  }
  printf("%d/%d = %d/%d\n",s.k[j].num,s.k[j].den,f.num,f.den);
}
int main()
{
  int n,i;
  S cases[100];
  F results[100];
  input_cases(n,cases);
  for(i=0;i<n;i++)
  {
     results[i] = compute_sum(cases[i]);
     print_egyptian_sum(results[i],cases[i]);
   }
  return 0;
}
